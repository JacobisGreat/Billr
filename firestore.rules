rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data, but invoices can be read publicly for payment purposes
    match /invoices/{document} {
      // Allow public read access for payment purposes (customers need to see invoice details)
      allow read: if true;
      
      // Allow public write access only to update payment status
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'paidAt', 'paidMethod'])
                    && request.resource.data.status == 'paid';
      
      // Allow authenticated users full access to their own invoices
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    match /customers/{document} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    match /recurringInvoices/{document} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    match /scheduledInvoices/{document} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    match /scheduleBatches/{document} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
  }
} 